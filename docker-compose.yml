version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: pgvector/pgvector:pg16
    container_name: ragone-postgres
    environment:
      POSTGRES_DB: ragone
      POSTGRES_USER: ragone_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-ragone_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data/ragone_schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./data/hybrid_retrieval_indexes.sql:/docker-entrypoint-initdb.d/02-indexes.sql
      - ./data/roleplay_tables.sql:/docker-entrypoint-initdb.d/03-roleplay.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ragone_user -d ragone"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: ragone-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 后端服务
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: ragone-backend
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ragone
      DB_USERNAME: ragone_user
      DB_PASSWORD: ${DB_PASSWORD:-ragone_password}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      JWT_SECRET: ${JWT_SECRET}
      SILICONFLOW_API_KEY: ${SILICONFLOW_API_KEY}
      FILE_STORAGE_PATH: /app/uploads
      SERVER_PORT: 8080
    volumes:
      - uploads_data:/app/uploads
      - logs_data:/app/logs
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_BASE_URL: ${REACT_APP_API_BASE_URL:-http://localhost:8080/api}
    container_name: ragone-frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  uploads_data:
    driver: local
  logs_data:
    driver: local

networks:
  default:
    name: ragone-network

